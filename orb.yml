commands:
  bundle-gems:
    description: |
      Creates cache of rubygems in vendor/cache folder and installs gems to BUNDLE_PATH afterwards
    parameters:
      bundle-path:
        default: vendor/bundle
        description: Path to store gems bundle
        type: string
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
    steps:
    - run:
        command: |
          export BUNDLE_JOBS=4
          export BUNDLE_PATH=<< parameters.bundle-path >>
          bundle lock && bundle package --all
        name: Install gems
  install-gems:
    description: |
      Restore, install, and cache Ruby gems
    parameters:
      bundle-path:
        default: vendor/bundle
        description: Path to store gems bundle
        type: string
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
      clean-bundle:
        default: true
        type: boolean
      install-gems:
        default: true
        type: boolean
      restore-cache:
        default: true
        type: boolean
      save-cache:
        default: true
        type: boolean
    steps:
    - when:
        condition: << parameters.restore-cache >>
        steps:
        - restore-gem-cache:
            cache-version: << parameters.cache-version >>
    - when:
        condition: << parameters.install-gems >>
        steps:
        - update-bundler
        - bundle-gems:
            bundle-path: << parameters.bundle-path >>
    - when:
        condition: << parameters.clean-bundle >>
        steps:
        - run:
            command: bundle exec bundle clean
            name: Remove old gems
    - when:
        condition: << parameters.save-cache >>
        steps:
        - save-gem-cache:
            cache-version: << parameters.cache-version >>
  install-packages:
    description: |
      Restore, install, and cache JS packages using Yarn
    parameters:
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
      install-packages:
        default: true
        type: boolean
      node-modules-path:
        default: node_modules
        description: Path to store packages
        type: string
      restore-cache:
        default: true
        type: boolean
      save-cache:
        default: true
        type: boolean
    steps:
    - when:
        condition: << parameters.restore-cache >>
        steps:
        - restore-node-cache:
            cache-version: << parameters.cache-version >>
    - when:
        condition: << parameters.install-packages >>
        steps:
        - run:
            command: yarn
            name: Install node packages
    - when:
        condition: << parameters.save-cache >>
        steps:
        - save-node-cache:
            cache-version: << parameters.cache-version >>
  restore-gem-cache:
    description: |
      Tries to restore cached gems from several different cache-keys
    parameters:
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
    steps:
    - restore_cache:
        keys:
        - << parameters.cache-version >>-gems-{{ .Branch }}-{{ checksum "Gemfile.lock"
          }}
        - << parameters.cache-version >>-gems-{{ .Branch }}
        - << parameters.cache-version >>-gems-master
        - << parameters.cache-version >>-gems
  restore-node-cache:
    description: |
      Tries to restore cached node packages from several different cache-keys
    parameters:
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
    steps:
    - restore_cache:
        keys:
        - << parameters.cache-version >>-packages-{{ .Branch }}-{{ checksum "yarn.lock"
          }}
        - << parameters.cache-version >>-packages-{{ .Branch }}
        - << parameters.cache-version >>-packages-master
        - << parameters.cache-version >>-packages
  save-gem-cache:
    description: |
      Saves installed bundle and cached rubygems to persistent cache
    parameters:
      bundle-path:
        default: vendor/bundle
        description: Path to store gems bundle
        type: string
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
    steps:
    - save_cache:
        key: << parameters.cache-version >>-gems-{{ .Branch }}-{{ checksum "Gemfile.lock"
          }}
        paths:
        - << parameters.bundle-path >>
        - vendor/cache
  save-node-cache:
    description: |
      Saves installed node packages to persistent cache
    parameters:
      cache-version:
        default: v1
        description: Version prefix to use in cache key
        type: string
      node-modules-path:
        default: node_modules
        description: Path to store packages
        type: string
    steps:
    - save_cache:
        key: << parameters.cache-version>>-packages-{{ .Branch }}-{{ checksum "yarn.lock"
          }}
        paths:
        - << parameters.node-modules-path >>
  update-bundler:
    description: |
      Update rubygems and bundler
    parameters:
      bundler-version:
        default: 2.0.1
        description: Which version of bundler to target for install
        type: string
    steps:
    - run:
        command: |
          export BUNDLER_VERSION=<< parameters.bundler-version >>
          sudo gem update --system
          sudo sh -c 'yes | gem update --force bundler'
        name: Update bundler
description: |
  Restore, install, and cache dependencies like Ruby gems and JS packages.
examples:
  default:
    description: |
      Install dependencies using the default cache-version ("v1").
    usage:
      jobs:
        setup-job:
          executor:
            name: ruby-system
          steps:
          - checkout
          - install_required_software
          - dependency-manager/install-gems
          - dependency-manager/install-packages
      orbs:
        dependency-manager: valimail/dependency-manager@0.1.2
      version: 2.1
  simple:
    description: |
      Install dependencies, explicitly setting the cache-version parameter (recommended).
    usage:
      jobs:
        setup-job:
          executor:
            name: ruby-system
          steps:
          - checkout
          - install_required_software
          - dependency-manager/install-gems:
              cache-version: v3
          - dependency-manager/install-packages:
              cache-version: v2
      orbs:
        dependency-manager: valimail/dependency-manager@0.1.2
      version: 2.1
jobs: {}
version: 2.1

